swagger: '2.0'
info:
  version: '1.0.0'
  title: "[Draft] Product Service API"
  description: |
    **FOR FURTHER DISCUSSION**

    ---

    Draft of a new Poduct API for outbound integration.

    To propose a change, head over to [GitHub repository](https://github.com/adidas-group/product-service-api),
    create a new branch with proposed change and open a [pull request](https://help.github.com/articles/about-pull-requests/).

    ## Article Information Levels
    Article information are provided on the following levels:

    1. Global
    1. Market-specific (seasonal)
    ## Catalogue Information Levels
    Catalogue information are provided on the following levels:

    1. Model-specific
        1. Global (seasonal)
        2. Market-specific (seasonal)
    1. Article-specific (seasonal)

    ## Marketing Channels
    Furthermore, there are three marketing channels (domains):

    1. eCom
    1. Retail (HERO)
    1. Wholesale (eCatalogue)

    These are communicated by the optional `marketingChannel` query parameter.
    When the parameter is omitted, the information common for "all" channels are returned.

    ## Language Variants
    Where applicable, product information support standard [HTTP Language Variants
    negotiation](https://adidas-group.gitbooks.io/api-guidelines/content/execution/localization.html)
    using the `Accept-Language` HTTP Header.

    ## Season Information
    Where applicable seasonal information might be retrieved using the optional
    `season` parameter. When no `season` parameter is provided the current
    season is returned.

produces:
  - application/hal+json      # Representation message format
  - application/problem+json  # Error message format

schemes:
  - https

securityDefinitions:
   "API Key":
     type: apiKey
     in: header
     name: Adidas-API-Key

security:
  - "API Key": []

paths:
  /:
    x-summary: Product Service API

    get:
      summary: Retrieve Product Service API Root
      description: Retrieve available top-level actions of the Product Service API
      responses:
        200:
          description: The root of the API
          schema:
            allOf:
              - $ref: '#/definitions/halResource'
            example:
              _links:
                self:
                  href: /
                articles:
                  href: /articles
                article:
                  href: /articles/{article_id}
                marketArticles:
                  href: /markets/{area_code}-{region_code}/articles
                marketArticle:
                  href: /markets/{area_code}-{region_code}/articles/{article_id}
                modelCatalogue:
                  href: /models/{model_id}/catalogue
                marketModelCatalogue:
                  href: /markets/{area_code}-{region_code}/models/{model_id}/catalogue
                articleCatalogue:
                  href: /articles/{article_id}/catalogue

  #
  # Article Information
  #
  /articles:
    x-summary: Articles
    x-description: Global articles information.

    get:
      summary: Retrieve List of Articles
      description: Retrieve list of all articles.
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: The list of articles
          schema:
            $ref: '#/definitions/articles'

  /articles/{article_id}:
    x-summary: Article
    x-description: Global article infromation.
    parameters:
      - $ref: '#/parameters/articleId'
      - $ref: '#/parameters/marketingChannel'

    get:
      summary: Retrieve Article
      description: Retrieve a particular article by its id.
      parameters:
        - $ref: '#/parameters/fields'
      responses:
        200:
          description: One Article
          schema:
            $ref: '#/definitions/article'

        404:
          description: The requested article wasn't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/assets:
    x-summary: Article Assets
    x-description: Global articles assets.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Assets
      description: Retrieve all assets for a particular article.
      responses:
        200:
          description: Assets for an Article
          schema:
            $ref: '#/definitions/assets'

        404:
          description: Assets for the given article weren't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/variants:
    x-summary: Article Variants
    x-description: Global articles variants.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Variants
      description: Retrieve all variants for a particular article.
      responses:
        200:
          description: Variants for an Article
          schema:
            $ref: '#/definitions/variants'

        404:
          description: Variants for the given article weren't found.
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/prices:
    x-summary: Article Prices
    x-description: Global articles prices.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Prices
      description: Retrieve prices for a particular article.
      responses:
        200:
          description: Prices for an Article
          schema:
            $ref: '#/definitions/prices'

        404:
          description: Prices for the given article weren't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /markets/{area_code}-{region_code}/articles:
    x-summary: Market Articles
    x-description: |
      Market-specific articles information.

      ---

      **Designer's Note**: As the market identifier is a compoud variable
      consisting of area and region code we should use the comma (`,`) and
      semi-colon (`;`) to indicate to "indicate nonhierarchical portions of the
      URI" e.g.: `/markets;are=52,region=111` however this isn't supported in
      Swagger 2.0 and as such the recommended work-around is to combine the two
      parts as two separate path variables `{area_code}-{region_code}`.

    parameters:
      - $ref: '#/parameters/areaCode'
      - $ref: '#/parameters/regionCode'
      - $ref: '#/parameters/season'

    get:
      summary: Retrieve List of Articles on a Market
      description: |
        Get list of every article information specific to a particular
        market.
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: The list of articles
          schema:
            $ref: '#/definitions/marketArticles'

        404:
          description: The requested market wasn't found.
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /markets/{area_code}-{region_code}/articles/{article_id}:
    x-summary: Market Article
    x-description: Market-specific Article information.
    parameters:
      - $ref: '#/parameters/areaCode'
      - $ref: '#/parameters/regionCode'
      - $ref: '#/parameters/articleId'
      - $ref: '#/parameters/season'

    get:
      summary: Retrieve Market Article
      description: |
        Get market-specific information for a particular article.
      responses:
        200:
          description: One Article
          schema:
            $ref: '#/definitions/article'

  #
  # Catalogue Information
  #
  /models/{model_id}/catalogue:
    x-summary: Model Catalogue
    x-description: Global model catalogue information.
    parameters:
      - $ref: '#/parameters/modelId'
      - $ref: '#/parameters/season'

    get:
      summary: Retrieve Model Catalogue
      description: Get a particular model's catalogue by model number.
      parameters:
        - $ref: '#/parameters/acceptLanguageHeader'

      responses:
        200:
          description: Model Catalogue
          headers:
            Content-Language:
              type: string
              default: en
              x-example: en
            Vary:
              type: string
              default: Accept-Language
              x-example: Accept-Language
          schema:
            $ref: '#/definitions/catalogue'

  /markets/{area_code}-{region_code}/models/{model_id}/catalogue:
    x-summary: Market Model Catalogue
    x-description: Market-specific model catalogue information.
    parameters:
      - $ref: '#/parameters/areaCode'
      - $ref: '#/parameters/regionCode'
      - $ref: '#/parameters/modelId'
      - $ref: '#/parameters/season'

    get:
      summary: Retrieve Market Model Catalogue
      description: |
        Get a particular model catalogue specific to a market.
      responses:
        200:
          description: Market Catalogue
          schema:
            $ref: '#/definitions/catalogue'

  /articles/{article_id}/catalogue:
    x-summary: Article Catalogue
    x-description: Article-specific catalogue information.
    parameters:
      - $ref: '#/parameters/articleId'
      - $ref: '#/parameters/season'

    get:
      summary: Retrieve Article Catalogue
      description: Retrieve a particular article's catalogue.
      responses:
        200:
          description: Article Catalogue
          schema:
            $ref: '#/definitions/catalogue'

#
# Parameters Definitions
#
parameters:
  # Article Id
  articleId:
    name: article_id
    in: path
    description: Id of the Article
    required: true
    type: string
    x-example: '015110'

  modelId:
    name: model_id
    in: path
    description: Id of the Model
    required: true
    type: string
    x-example: 'CDI16'

  # Market Area Code
  areaCode:
    name: area_code
    in: path
    description: Code of an area
    required: true
    type: string
    x-example: 'area-code-1'

  # Market Region Code
  regionCode:
    name: region_code
    in: path
    description: Code of a region
    required: true
    type: string
    x-example: 'region-code-1'

  # Marketing Channel
  marketingChannel:
    name: marketingChannel
    in: query
    description: Requested marketing channel
    required: false
    type: string
    enum:
      - ecom
      - retail
      - wholesale
      - all
    default: 'all'
    x-example: 'ecom'

  # Season filter
  season:
    name: season
    in: query
    description: Filter results based on the defined season-name (SS14, FW14)
    type: string
    default: 'current' # TODO: Current season, identifier
    x-example: 'SS17'

  # adidas API guidelines: Pagination
  offset:
    name: offset
    in: query
    description: Number of results to skip from the start of the list
    required: false
    type: string
    default: '0'
    x-example: '10'

  # adidas API guidelines: Pagination
  limit:
    name: limit
    in: query
    description: The maximum number of reusults to return
    required: false
    type: string
    default: '10'
    x-example: '5'

  # adidas API guidelines: Sparse fieldset
  fields:
    name: fields
    in: query
    description: Comma-separated list of fields to include in the response
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
    x-example:
      - articleNumber
      - modelNumber

  # adidas API guidelines:
  acceptLanguageHeader:
    name: 'Accept-Language'
    in: header
    type: string
    default: en
    x-example: en,en-US,fr;q=0.6

#
# Models Definitions
#
definitions:
  #
  # Article
  #
  articles:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      resultCount:
        type: number
    example:
      _links:
        self:
          href: /articles
        next:
          href: /articles?offset=5&limit=5
        first:
          href: /articles?offset=0&limit=5
        last:
          href: /articles?offset=40&limit=5
      resultCount: 42
      _embedded:
        article:
          - $ref: '#/definitions/article/example'

  article:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
      - $ref: '#/definitions/articleSeasonal'
    example:
      _links:
        self:
          href: /articles/015110
        assets:
          href: /articles/015110/assets
        variants:
          href: /articles/015110/variants
        prices:
          href: /articles/015110/prices
        catalogue:
          href: /articles/015110/catalogue
        relatedProducts:
          - href: /articles/BY3041
          - href: /articles/BY3042
      $ref: '#/definitions/articleSeasonal/example'

  #
  # Article
  #
  articleSeasonal:
    type: object
    properties:
      articleNumber:
        type: string
      modelNumber:
        type: string
      articleDescription:
        type: string
        description: Always in english
      genderCode:
        type: string
      genderDescription:
        type: string
      brandCode:
        type: string
      brandDescription:
        type: string
      productTypeCode:
        type: string
      productTypeDescription:
        type: string
      colorwayName:
        type: string
      colorwayDescription:
        type: string
        description: Is it short description or long - both? English only
      ageGroupCode:
        type: string
      ageGroupDescription:
        type: string
      season:
        type: object
        description: Sesonal article attributes
        properties:
          carryOver:
            type: boolean
          retailIntroDate:
            type: string
            format: date-time
          retailExitDate:
            type: string
            format: date-time
      colors:
        type: array
        description: Array of article colors, language-specific
        items:
          $ref: '#/definitions/Color'
    example:
      articleNumber: "015110"
      modelNumber: "10034"
      articleDescription: "COPA MUNDIAL"
      genderCode: "M"
      genderDescription: "MALE"
      brandCode: "11"
      brandDescription: "ADIDAS"
      productTypeCode: "104"
      productTypeDescription: "FOOTBALL SHOES (FIRM GROUND)"
      colorwayName: "FTWR WHITE/BLACK"
      colorwayDescription: "BLABAS/GRAFIT/BLABAS"
      ageGroupCode: "A"
      ageGroupDescription: "ADULT"
      season:
        carryOver: false
        retailIntroDate: "2017-06-01"
        retailExitDate: "2017-11-30"

  #
  # eCommerce Article
  #
  ecomArticleSeasonal:
    type: object
    allOf:
      - $ref: '#/definitions/articleSeasonal'
    properties:
      preOrder:
        type: boolean
      personalizable:
        type: boolean
      hypeProduct:
        type: boolean
      flashProduct:
        type: boolean
      soldOut:
        type: boolean
      onlineFrom:
        type: string
        format: date-time        
      onlineTo:
        type: string
        format: date-time

  #
  # Color
  #
  Color:
    type: object
    properties:
      color1Code:
        type: string
      color1Description:
        type: string
        description: Language-dependent
      color2Code:
        type: string
      color2Description:
        type: string
        description: Language-dependent
      color3Code:
        type: string
      color3Description:
        type: string
        description: Language-dependent
      color4Code:
        type: string
      color4Description:
        type: string
        description: Language-dependent
    example:
      color1Code: "A0QM"
      color1Description: "core black"
      color2Code: "A98B"
      color2Description: "utility black"
      color3Code: "A0QM"
      color3Description: "core black"
      color4Code: "01F7"
      color4Description: "ftwr white"

  articleNotFoundError:
    type: object
    allOf:
      - $ref: '#/definitions/problemDetail'
    example:
      title: 'Not Found'
      detail: 'Cannot find the requested article'
      status: 404
      instance: '/articles/1234'

  #
  # Article Assets
  #
  assets:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      assetCount:
        type: number
      assets:
        type: array
        items:
          - $ref: '#/definitions/asset'
    example:
      _links:
        self:
          href: /articles/015110/assets
      assetCount: 1
      assets:
        - $ref: '#/definitions/asset/example'

  asset:
    type: object
    properties:
      assetType:
        type: string
        enum:
          - image
          - video
          - other
        example: image
      viewGroup:
        type: string
        example: 3d
      view:
        type: string
        example: standard
      assetCategory:
        type: string
        example: Photography
      usageTerms:
        type: array
        items:
          - type: string
            example: B2B Cataloguge
      assetHref:
        type: string
        format: uri
      image:
        type: object
        properties:
          style:
            type: string
            example: On Model
          width:
            type: integer
            example: 2000
          height:
            type: integer
            example: 2000
          bgColor:
            type: string
            example: transparent
          representation:
            type: string
      video:
        type: object
        properties:
          fileSize:
            type: integer
            example: 17224902
      model:
        type: object
        properties:
          waist:
            type: string
            example: 58
          chest:
            type: string
            example: 97
          height:
            type: string
            example: 197
          productSize:
            type: string
            example: 540
    required:
      - assetType
      - viewGroup
      - view
      - assetCategory
      - usageTerms
      - assetHref
    example:
      assetType: image
      viewGroup: 3d
      assetCategory: Photography
      usageTerms: B2B Cataloguge
      assetHref: http://domain.com/image.jpeg
      image:
        style: On Model
        width: 2000
        height: 2000
        bgColor: transparent
      model:
        waist: 58
        chest: 97
        height: 197
        productSize: 540

  #
  # Article Variations
  #
  variants:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      variantCount:
        type: number
      variants:
        type: array
        items:
          - $ref: '#/definitions/variant'
    example:
      _links:
        self:
          href: /articles/015110/variants
      variantCount: 1
      variants:
        - $ref: '#/definitions/variant/example'

  variant:
    type: object
    properties:
      EAN:
        type: string
        example: "4058026055128"
      UPC:
        type: string
        example: "885591427616"
      srcSizeCD3:
        type: string
        example: "380"
      srcSizeScale:
        type: string
        example: "T4"
      srcSizeDescription:
        type: string
      conversionIDs:
        type: array
        items:
          - type: object
            properties:
              localSize:
                type: string
              saleSizeConvID:
                type: string
                example: D
              saleSizeScale:
                type: string
                example: 8C
              saleSizeAbbr:
                type: string
                example: 27
              saleSizeDesc:
                type: string
                example: 27
    required:
      - EAN
      - UPC
    example:
      EAN: "4058026055128"
      UPC: "885591427616"
      srcSizeCD3: "380"
      srcSizeScale: "T4"
      conversionIDs:
        - saleSizeConvID: D
          saleSizeScale: 8C
          saleSizeAbbr: "27"

  #
  # Article Prices
  #
  prices:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      priceCount:
        type: number
      prices:
        type: array
        items:
          - $ref: '#/definitions/price'
    example:
      _links:
        self:
          href: /articles/015110/prices
      priceCount: 1
      prices:
        - $ref: '#/definitions/price/example'

  price:
    type: object
    properties:
      timePeriodCode: 
        type: string
        example: "71"
      salesOrg:
        type: string
        example: "0681"
      distChannel:
        type: string
        example: "01"
      priceType:
        type: string
        example: "Act_SalesPrice"
      currency:
        type: string
        example: "EUR"
      validFrom:
        type: string
        format: date-time
        example: "2017-01-01"
      validTo:
        type: string
        format: date-time
        example: "2017-12-31"
      priceValue:
        type: string
        example: "74,98"
      priceUnit:
        type: string
        example: "1"
      countryCode:
        type: string
        example: "AT"
    required:
      - timePeriodCode
      - salesOrg
      - distChannel
      - priceType
      - currency
      - validFrom
      - validTo
      - priceValue
      - countryCode
    example:
      timePeriodCode: "71"
      salesOrg: "0681"
      distChannel: "01"
      priceType: "Act_SalesPrice"
      currency: "EUR"
      validFrom: "2017-01-01"
      validTo: "2017-12-31"
      priceValue: "74,98"
      countryCode: "AT"

  #
  # Market
  #
  market:
    type: object

  marketNotFoundError:
    type: object
    allOf:
      - $ref: '#/definitions/problemDetail'
    example:
      title: 'Not Found'
      detail: 'Cannot find the requested market'
      status: 404
      instance: '/markets/areacode-regioncode'

  marketArticles:
    type: object

  #
  # Catalogue
  #
  catalogues:
    type: object

  catalogue:
    type: object

  #
  # -- DO NOT EDIT BEYOND THIS POINT --
  #

  # Media Types Definitions

  #
  # application/problem+json
  #
  problemDetail:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        type: number
      detail:
        type: string
      instance:
        type: string
    required:
      - title
      - detail

  #
  # application/hal+json defintion
  #
  halLinkObject:
    type: object
    required:
      - href
    properties:
      href:
        type: string
      templated:
        type: boolean
      type:
        type: string
      deprecation:
        type: string
      name:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string

  halCuriesLink:
    title: HAL Curies Link
    allOf:
      - type: object
        properties:
          templated:
            enum:
              - true
        required:
          - templated
      - $ref: '#/definitions/halLinkObject'

  halResource:
    title: HAL Resource Object
    type: object
    properties:
      _links:
        type: object
        additionalProperties:
          # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
          allOf:
            - $ref: '#/definitions/halLinkObject'
            - type: array
              items:
                - $ref: '#/definitions/halLinkObject'
        properties:
          curies:
            # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
            allOf:
              - $ref: '#/definitions/halCuriesLink'
              - type: array
                items:
                  - $ref: '#/definitions/halCuriesLink'
      _embedded:
        type: object
        additionalProperties: true
        # WARN: Apiary doesn't support circular references
        # additionalProperties:
        #   anyOf:
        #     - $ref: '#/definitions/hal_resource'
        #     - type: array
        #       items:
        #         - $ref: '#/definitions/hal_resource'