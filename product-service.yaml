swagger: '2.0'
info:
  version: '1.0.0'
  title: "[Draft] Product Service API"
  description: |
    **FOR FURTHER DISCUSSION**

    ---

    Draft of a new Poduct API for outbound integration.

    To propose a change, head over to [GitHub repository](https://github.com/adidas-group/product-service-api),
    create a new branch with proposed change and open a [pull request](https://help.github.com/articles/about-pull-requests/).

    ## Available Affordances
    The API affords the following top-level actions:
    - Retrieve all articles
    - Retrieve all articles for a particular market
    - Retrieve particular article information
    - Retrieve particular article information on a specific market
    - Retrieve the catalogue information for a particular article
    - Retrieve the catalogue information for a particular model
    - Retrieve the catalogue information for a particular model and market
    - Retrieve all markets, and their area and region codes

    ## Article Information Levels
    Article information are provided on the following levels:

    1. Global
    1. Market-specific

    ## Catalogue Information Levels
    Catalogue information are provided on the following levels:

    1. Model-specific
        1. Global
        2. Market-specific
    1. Article-specific

    ## Marketing Channels
    The Product Service API (this API) doesn't provide any marketing channel 
    -specific information. To retireve product information specifict ot a 
    marketing channel refer to the respective marketing channel APIs 

    1. [eCommerce](https://draftproductserviceglass.docs.apiary.io/#) (GLASS)
    1. Retail (HERO) (planned)
    1. Wholesale (eCatalogue) (planned)

    ## Season Information
    Where applicable, seasonal information might be retrieved using the optional
    `seasonName` parameter. When no `seasonName` parameter is provided the current
    season is returned.

    ## Language Variants
    Where applicable, product information support standard [HTTP Language Variants
    negotiation](https://adidas-group.gitbooks.io/api-guidelines/content/execution/localization.html)
    using the `Accept-Language` HTTP Header.

    ## Embedding Related Resoruces
    For the performance reasons over HTTP/1.1 the article-related resources will
    be embeded under `_embedded` field as specified in [HAL](http://stateless.co/hal_specification.html)
     representation format.

produces:
  - application/hal+json      # Representation message format
  - application/problem+json  # Error message format

schemes:
  - https

securityDefinitions:
   "API Key":
     type: apiKey
     in: header
     name: Adidas-API-Key

security:
  - "API Key": []

paths:
  /:
    x-summary: Product Service API

    get:
      summary: Retrieve Product Service API Root
      description: Retrieve available top-level actions of the Product Service API
      responses:
        200:
          description: The root of the API
          schema:
            allOf:
              - $ref: '#/definitions/halResource'
            example:
              _links:
                self:
                  href: /
                articles:
                  href: /articles
                article:
                  href: /articles/{article_id}
                countryArticles:
                  href: /articles{?country}
                # TODO: change URIs for market articles
                # TODO: make clear separation between market article season and global season
                marketArticles:
                  href: /market-articles{?area_code,region_code,season_code}
                marketArticle:
                  href: /market-articles/{article_id}{?area_code,region_code,season_code} # TODO: make season code mandatory
                modelCatalogue:
                  href: /models/{model_id}/catalogue
                marketModelCatalogue:
                  href: /models/{model_id}/catalogue{?area_code,region_code}
                articleCatalogue:
                  href: /articles/{article_id}/catalogue
                markets:
                  href: /markets

  #
  # Article Information
  #
  /articles:
    x-summary: Articles
    x-description: Global articles information.

    get:
      summary: Retrieve List of Articles
      description: |
        Retrieve list of all articles.

        | Available Filters | Parameter Location | Parameter Name(s)          |
        |-------------------|--------------------|----------------------------|
        | season            | query              | `seasonName`               |
        | market            | query              | `region_code`, `area_code` |
        | site              | query              | `country`                  |
        | language          | header             | `Accept-Language`          |

        > NOTE: The embedded articles in the `_embedded` field might not represent
        > the latest information, nor be complete. To retireve the full up-to-date
        > representation of an article exercise its `self` relation.

      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/seasonName'
        - $ref: '#/parameters/marketingChannel'
        - $ref: '#/parameters/areaCodeQuery'
        - $ref: '#/parameters/regionCodeQuery'
        - $ref: '#/parameters/countryCodeQuery'
        - $ref: '#/parameters/acceptLanguageHeader'
      responses:
        200:
          description: The list of articles
          headers:
            Content-Language:
              type: string
              default: en
              x-example: en
            Vary:
              type: string
              default: Accept-Language
              x-example: Accept-Language
          schema:
            $ref: '#/definitions/articlesHAL'

  /articles/{article_id}:
    x-summary: Article
    x-description: Global article infromation.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article
      description: |
        Retrieve a particular article by its id.

        | Available Filters | Parameter Location | Parameter Name(s)          |
        |-------------------|--------------------|----------------------------|
        | season            | query              | `seasonName`               |
        | marketing channel | query              | `marketingChannel`         |
        | market            | query              | `region_code`, `area_code` |
        | site              | query              | `country`                  |
        | language          | header             | `Accept-Language`          |

      parameters:
        - $ref: '#/parameters/seasonName'
        - $ref: '#/parameters/marketingChannel'
        - $ref: '#/parameters/areaCodeQuery'
        - $ref: '#/parameters/regionCodeQuery'
        - $ref: '#/parameters/countryCodeQuery'
        - $ref: '#/parameters/fields'
        - $ref: '#/parameters/acceptLanguageHeader'
      responses:
        200:
          description: One Article
          headers:
            Content-Language:
              type: string
              default: en
              x-example: en
            Vary:
              type: string
              default: Accept-Language
              x-example: Accept-Language
          schema:
            $ref: '#/definitions/articleHAL'

        404:
          description: The requested article wasn't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/assets:
    x-summary: Article Assets
    x-description: Global articles assets.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Assets
      description: |
        Retrieve all assets for a particular article.
      responses:
        200:
          description: Assets for an Article
          schema:
            $ref: '#/definitions/assetsHAL'

        404:
          description: Assets for the given article weren't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/skus:
    x-summary: Article SKUs
    x-description: Global articles SKUs.
    parameters:
      - $ref: '#/parameters/articleId'
    get:
      summary: Retrieve Article SKUs
      responses:
        200:
          description: SKUs for an Article
          schema:
            $ref: '#/definitions/skusHAL'

        404:
          description: SKUs for the given article weren't found.
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/prices:
    x-summary: Article Prices
    x-description: Article prices.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Prices
      description: |
        Retrieve prices for a particular article.

        | Available Filters | Parameter Location | Parameter Name(s) |
        |-------------------|--------------------|-------------------|
        | season            | query              | `seasonName`      |
      parameters:
        - $ref: '#/parameters/seasonName'
      responses:
        200:
          description: Prices for an Article
          schema:
            $ref: '#/definitions/pricesHAL'

        404:
          description: Prices for the given article weren't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  /articles/{article_id}/colors:
    x-summary: Article Colors
    x-description: Article colors, language dependent (see Language Variants).
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Colors
      description: |
        Retrieve available colors for a particular article.

        | Available Filters | Parameter Location | Parameter Name(s) |
        |-------------------|--------------------|-------------------|
        | season            | query              | `seasonName`      |
        | language          | header             | `Accept-Language` |
      parameters:
        - $ref: '#/parameters/seasonName'
        - $ref: '#/parameters/acceptLanguageHeader'
      responses:
        200:
          description: Prices for an Article
          headers:
            Content-Language:
              type: string
              default: en
              x-example: en
            Vary:
              type: string
              default: Accept-Language
              x-example: Accept-Language
          schema:
            $ref: '#/definitions/colorsHAL'

        404:
          description: Colors for the given article weren't found.
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: '#/definitions/articleNotFoundError'

  #
  # Catalogue Information
  #
  /models/{model_id}/catalogue:
    x-summary: Model Catalogue
    x-description: Global model catalogue information.
    parameters:
      - $ref: '#/parameters/modelId'

    get:
      summary: Retrieve Model Catalogue
      description: |
        Get a particular model's catalogue by model number.

        | Available Filters | Parameter Location | Parameter Name(s)          |
        |-------------------|--------------------|----------------------------|
        | season            | query              | `seasonName`               |
        | market            | query              | `region_code`, `area_code` |
        | language          | header             | `Accept-Language`          |
      parameters:
        - $ref: '#/parameters/acceptLanguageHeader'
        - $ref: '#/parameters/seasonName'
        - $ref: '#/parameters/areaCodeQuery'
        - $ref: '#/parameters/regionCodeQuery'
      responses:
        200:
          description: Model Catalogue
          headers:
            Content-Language:
              type: string
              default: en
              x-example: en
            Vary:
              type: string
              default: Accept-Language
              x-example: Accept-Language
          schema:
            $ref: '#/definitions/modelCatalogueHAL'

  /articles/{article_id}/catalogue:
    x-summary: Article Catalogue
    x-description: Article-specific catalogue information.
    parameters:
      - $ref: '#/parameters/articleId'

    get:
      summary: Retrieve Article Catalogue
      description: |
        Retrieve a particular article's catalogue.

        | Available Filters | Parameter Location | Parameter Name(s)          |
        |-------------------|--------------------|----------------------------|
        | season            | query              | `seasonName`               |
        | language          | header             | `Accept-Language`          |
      parameters:
        - $ref: '#/parameters/acceptLanguageHeader'
        - $ref: '#/parameters/seasonName'
      responses:
        200:
          description: Article Catalogue
          schema:
            $ref: '#/definitions/articleCatalogueHAL'

  /markets:
    x-summary: Markets
    x-description: List of available markets and their area and region codes.

    get:
      summary: Retrieve Markets
      description: Retrieve the List of Available Markets

      responses:
        200:
          description: |
            List of area-code region-code tuples toghether with their specific article
            listings.
          schema:
            $ref: '#/definitions/marketsHAL'

#
# Parameters Definitions
#
parameters:
  # Article Id
  articleId:
    name: article_id
    in: path
    description: Id of the Article
    required: true
    type: string
    x-example: '015110'

  # Model Id
  modelId:
    name: model_id
    in: path
    description: Id of the Model
    required: true
    type: string
    x-example: '10034'

  # Market Area Code
  areaCodeQuery:
    name: area_code
    in: query
    description: | 
      Code of an area
      Mutually exclusive with `country`.
    required: false
    type: string
    x-example: 'A1'

  # Market Region Code
  regionCodeQuery:
    name: region_code
    in: query
    description: |
      Code of a region.
      Mutually exclusive with `country`.
    required: false
    type: string
    x-example: '50'

  # Country (site) Code
  countryCodeQuery:
    name: country
    in: query
    description: |
      Code of a country. 
      Mutually exclusive with `region_code` and `area_code`.
    required: false
    type: string
    x-example: 'ch'

  # Marketing Channel
  marketingChannel:
    name: marketingChannel
    in: query
    description: Requested marketing channel
    required: false
    type: string
    enum:
      - ecom
      - retail
      - wholesale
      - global
    default: 'global'
    x-example: 'ecom'

  # Season filters
  # Season Name is the preffered way to filter for season
  seasonName: 
    name: seasonName
    in: query
    description: |
      Filter resutls based on the season name.
      Season name format is 2 letters for season and 2 numbers for year (e.g., FW17)
    type: string
    x-example: 'FW17'

  # Season Code
  seasonCode:
    name: seasonCode
    in: query
    description: |
      Filter results based on the season code.
      Season code format is "20171" – 4 digits for year and 1 digit for season type.
    type: string
    x-example: '20171'

  # adidas API guidelines: Pagination
  offset:
    name: offset
    in: query
    description: Number of results to skip from the start of the list
    required: false
    type: string
    default: '0'
    x-example: '10'

  # adidas API guidelines: Pagination
  limit:
    name: limit
    in: query
    description: The maximum number of reusults to return
    required: false
    type: string
    default: '10'
    x-example: '5'

  # adidas API guidelines: Sparse fieldset
  fields:
    name: fields
    in: query
    description: Comma-separated list of fields to include in the response
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
    x-example:
      - articleNumber
      - modelNumber

  # adidas API guidelines:
  acceptLanguageHeader:
    name: 'Accept-Language'
    in: header
    type: string
    default: en
    x-example: en,en-US,fr;q=0.6

#
# Models Definitions
#
definitions:
  #
  # Article
  #
  articlesHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      articleCount:
        type: number
    example:
      _links:
        self:
          href: /articles
        next:
          href: /articles?offset=5&limit=5
        first:
          href: /articles?offset=0&limit=5
        last:
          href: /articles?offset=40&limit=5
      articleCount: 1
      _embedded:
        article:
          - $ref: '#/definitions/articleHAL/example'

  articleHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
      - $ref: '#/definitions/articleSeasonal'
    example:
      _links:
        self:
          href: /articles/015110
        assets:
          href: /articles/015110/assets
        skus:
          href: /articles/015110/skus
        prices:
          href: /articles/015110/prices
        colors:
          href: /articles/015110/colors
        catalogue:
          href: /articles/015110/catalogue
        relatedArticles:
          - href: /articles/015111
          - href: /articles/015112
        ecomArticle:
          href: https://api.adidas.com/ecom/article/015110
        availability:
          href: https://private-483f4-eainventoryapi.apiary-mock.com/availability?articlesIds=015110
      
      _embedded:

      $ref: '#/definitions/articleSeasonal/example'
  #
  # Article
  #
  articleSeasonal:
    type: object
    properties:
      articleNumber:
        type: string
      modelNumber:
        type: string
      articleDescription:
        type: string
        description: Always in english
      gender:
        $ref: '#/definitions/codeDescriptionTuple'
      brand:
        $ref: '#/definitions/codeDescriptionTuple'
      productType:
        $ref: '#/definitions/codeDescriptionTuple'
      ageGroup:
        $ref: '#/definitions/codeDescriptionTuple'
      colorway:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
            description: Is it short description or long - both? English only
      # TODO: put here the colors directly, remove the colors resource
      colors:
        type: object

      # TODO: move season to a separate resource
      season:
        type: object
        description: Sesonal article attributes
        properties:
          seasonName: # REMINDER: this is a new property
            type: string

          carryOver:
            type: boolean
          retailIntroDate:
            type: string
            format: date-time
          retailExitDate:
            type: string
            format: date-time
    example:
      articleNumber: "015110"
      modelNumber: "10034"
      articleDescription: "COPA MUNDIAL"
      gender:
        code: "M"
        description: "MALE"
      brand:
        code: "11"
        description: "ADIDAS"
      productType:
        code: "104"
        description: "FOOTBALL SHOES (FIRM GROUND)"
      ageGroup:
        code: "A"
        description: "ADULT"
      colorway:
        name: "FTWR WHITE/BLACK"
        description: "BLABAS/GRAFIT/BLABAS"
      season:
        carryOver: false
        retailIntroDate: "2017-06-01"
        retailExitDate: "2017-11-30"

  #
  # eCommerce Article
  #
  ecomArticleSeasonal: # TODO: Remove article seasonality
    type: object
    allOf:
      - $ref: '#/definitions/articleSeasonal'
    properties:
      preOrder:
        type: boolean
      personalizable:
        type: boolean
      hypeProduct:
        type: boolean
      flashProduct:
        type: boolean
      soldOut:
        type: boolean
      onlineFrom:
        type: string
        format: date-time
      onlineTo:
        type: string
        format: date-time

  articleNotFoundError:
    type: object
    allOf:
      - $ref: '#/definitions/problemDetail'
    example:
      title: 'Not Found'
      detail: 'Cannot find the requested article'
      status: 404
      instance: '/articles/1234'

  #
  # Article Assets
  #
  assetsHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      assetCount:
        type: number
      assets:
        type: array
        items:
          - $ref: '#/definitions/asset'
    example:
      _links:
        self:
          href: /articles/015110/assets
      assetCount: 1
      assets:
        - $ref: '#/definitions/asset/example'

  #
  # Asset
  #
  asset:
    type: object
    properties:
      assetType:
        type: string
        description: Available in the 1st iteration
        enum:
          - image
          - video
          - other
      viewGroup:
        type: string
        description: Available in the 1st iteration
      view:
        type: string
        description: Available in the 1st iteration
      assetCategory:
        type: string
        description: Available in the 1st iteration
      usageTerms:
        type: array
        description: Available in the 1st iteration
        items:
          - type: string
      assetHref:
        type: string
        description: Available in the 1st iteration
        format: uri
      image:
        type: object
        properties:
          style:
            type: string
            description: Available in the 1st iteration
          width:
            type: integer
          height:
            type: integer
          bgColor:
            type: string
          representation:
            type: string
      video:
        type: object
        properties:
          fileSize:
            type: integer
      model:
        type: object
        properties:
          waist:
            type: string
          chest:
            type: string
          height:
            type: string
          productSize:
            type: string
    required:
      - assetType
      - viewGroup
      - view
      - assetCategory
      - usageTerms
      - assetHref
    example:
      assetType: image
      viewGroup: 3d
      assetCategory: Photography
      usageTerms: B2B Cataloguge
      assetHref: http://domain.com/image.jpeg
      image:
        style: On Model
        width: 2000
        height: 2000
        bgColor: transparent
      model:
        waist: 58
        chest: 97
        height: 197
        productSize: 540

  #
  # Article SKUs
  #
  skusHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      skuCount:
        type: number
      skus:
        type: array
        items:
          - $ref: '#/definitions/sku'
    example:
      _links:
        self:
          href: /articles/015110/skus
      skuCount: 1
      skus:
        - $ref: '#/definitions/sku/example'

  #
  # SKU
  #
  sku:
    type: object
    properties:
      EAN:
        type: string
        description: Available in the 1st iteration
      UPC:
        type: string
        description: Available in the 1st iteration
      srcSizeCD3:
        type: string
      srcSizeScale:
        type: string
      srcSizeDescription:
        type: string
      conversionIDs:
        type: array
        items:
          - type: object
            properties:
              localSize:
                type: string
              saleSizeConvID:
                type: string
              saleSizeScale:
                type: string
              saleSizeAbbr:
                type: string
              saleSizeDesc:
                type: string
    example:
      EAN: "4058026055128"
      UPC: "885591427616"
      srcSizeCD3: "380"
      srcSizeScale: "T4"
      conversionIDs:
        - saleSizeConvID: D
          saleSizeScale: 8C
          saleSizeAbbr: "27"

  #
  # eCommerce SKU
  #
  ecomSKU:
    type: object
    allOf:
      - $ref: '#/definitions/articleSeasonal'
    properties:
      ecomDisplaySize:
        type: string
      ecomRetailInStock:
        type: string
        format: date-time
      stockAvailability:
        type: integer

  #
  # Article Prices
  #
  pricesHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      priceCount:
        type: number
      prices:
        type: array
        items:
          - $ref: '#/definitions/price'
    example:
      _links:
        self:
          href: /articles/015110/prices
      priceCount: 1
      prices:
        - $ref: '#/definitions/price/example'

  #
  # Price
  #
  price:
    type: object
    properties:
      timePeriodCode:
        type: string
      salesOrg:
        type: string
      distChannel:
        type: string
      priceType:
        type: string
      currency:
        type: string
      validFrom:
        type: string
        format: date-time
      validTo:
        type: string
        format: date-time"
      priceValue:
        type: string
      priceUnit:
        type: string
      countryCode:
        type: string
    example:
      timePeriodCode: "71"
      salesOrg: "0681"
      distChannel: "01"
      priceType: "Act_SalesPrice"
      currency: "EUR"
      validFrom: "2017-01-01"
      validTo: "2017-12-31"
      priceValue: "74,98"
      countryCode: "AT"

  #
  # Article Colors
  #
  # TODO: Move under the article directly
  colorsHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      colorsCount:
        type: number
      colors:
        type: array
        items:
          - $ref: '#/definitions/price'
    example:
      _links:
        self:
          href: /articles/015110/colors
      colorsCount: 1
      colors:
        - $ref: '#/definitions/color/example'

  #
  # Color
  #
  color:
    type: object
    description: Color descriptions are language-dependent
    properties:
      color1:
        $ref: '#/definitions/codeDescriptionTuple'
      color2:
        $ref: '#/definitions/codeDescriptionTuple'
      color3:
        $ref: '#/definitions/codeDescriptionTuple'
      color4:
        $ref: '#/definitions/codeDescriptionTuple'
    example:
      color1:
        code: "A0QM"
        description: "core black"
      color2:
        code: "A98B"
        description: "utility black"
      color3:
        code: "A0QM"
        description: "core black"
      color4:
        code: "01F7"
        description: "ftwr white"

  #
  # Catalogue
  #
  modelCatalogueHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
      - $ref: '#/definitions/catalogue'
    example:
      _links:
        self:
          href: /models/10034/catalogue
      $ref: '#/definitions/catalogue/example'

  articleCatalogueHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
      - $ref: '#/definitions/catalogue'
    example:
      _links:
        self:
          href: /articles/015110/catalogue
      $ref: '#/definitions/catalogue/example'

  catalogue:
    type: object
    properties:
      catalogueCopy:
        type: object
        $ref: '#/definitions/catalogueCopy'
      featureAndBenefits:
        type: array
        items:
          - $ref: '#/definitions/featureAndBenefit'
    example:
      catalogueCopy:
        $ref: '#/definitions/catalogueCopy/example'
      featureAndBenefits:
        - $ref: '#/definitions/featureAndBenefit/example'

  featureAndBenefit:
    type: object
    properties:
      featureAndBenefitCode:
        type: string
      businessCode:
        type: string
      shoePart:
        type: string
      # TODO: Is this needed with language negotiation?
      #langaugeCode:
      #  type: string
      featureName:
        type: string
      featureDescription:
        type: string
      logoName:
        type: string
      logoHref:
        type: string
        format: uri
    example:
      featureAndBenefitCode: "68465468"
      businessCode: "BU Young Athlete"
      shoePart: "Upper"
      featureName: "Costura à maquina"
      featureDescription: "construction nylon/TPU pour un bon toucher de balle et une bonne résistance à l'usure."
      logoName: "ECO_OrthoLiteLogo"
      logoHref: "http://domain.com/logo.jpeg"

  catalogueCopy:
    type: object
    properties:
      acsModelName:
        type: string
      b2cCopy:
        type: string
      b2cCopyShort:
        type: string
      b2bCopy:
        type: string
      b2bCopyShort:
        type: string
      materialComposition:
        type: string
      materialConstruction:
        type: string
      bullets1:
        type: string
      bullets2:
        type: string
      bullets3:
        type: string
      bullets4:
        type: string
      bullets5:
        type: string
      bullets6:
        type: string
      bulletMaterial:
        type: string
    example:
      acsModelName: "COPA MUNDIAL"
      b2cCopy: "De populairste voetbalschoen ooit, en terecht. De adidas Copa Mundial heeft een bovenwerk van rijk leer en een loopzool met dubbele dichtheid die al decennia lang de toon zet voor comfort en prestaties op het veld."
      b2cCopyShort: "Entraîne-toi comme les pros avec ce haut de l'équipe de Belgique de football."
      b2bCopy: "Hurricanes Training Jersey as worn by the players when training with dynamic retro design inspired by the original Super Jersey.Captured with shock blue and black colors on climalite fabric with moisture wicking properties."
      b2bCopyShort: "Hurricanes Training Jersey as worn by the players when training with dynamic retro design inspired by the orginal Super jersey."
      materialComposition: "100% Organic Cotton"
      materialConstruction: "Single jersey"
      bullets1: "materiál Climalite odvádí pot a udrží tě v suchu za všech okolností"
      bullets2: "Ribbet V-hals"
      bullets3: "Nackenband"
      bullets4: "Επένδυση προστασίας από τον άνεμο στο μπροστινό μέρος. Μανσέτες με ανοίγματα για τους αντίχειρες"
      bullets5: "Woven Belgium crest on chest"
      bullets6: "3 bandas en las mangas; logotipo de adidas serigrafiado a la derecha del pecho"
      bulletMaterial: "Maille double 100 % polyester."

  #
  # Market
  #
  marketsHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      marketsCount:
        type: number
      markets:
        type: array
        items:
          - $ref: '#/definitions/marketHAL'
    example:
      _links:
        self:
          href: /markets
      marketsCount: 1
      markets:
        - $ref: '#/definitions/marketHAL/example'

  marketHAL:
    type: object
    allOf:
      - $ref: '#/definitions/halResource'
    properties:
      areaCode:
        type: string
      regionCode:
        type: string
    example:
      _links:
        marketArticles:
          href: /articles?area_code=A1&region_code=50
      areaCode: 'A1'
      regionCode: '50'

  #
  # General Purpuse Data Structures
  #
  codeDescriptionTuple:
    type: object
    properties:
      code:
        type: string
      description:
        type: string

  #
  # -- DO NOT EDIT BEYOND THIS POINT --
  #

  # Media Types Definitions

  #
  # application/problem+json
  #
  problemDetail:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        type: number
      detail:
        type: string
      instance:
        type: string
    required:
      - title
      - detail

  #
  # application/hal+json defintion
  #
  halLinkObject:
    type: object
    required:
      - href
    properties:
      href:
        type: string
      templated:
        type: boolean
      type:
        type: string
      deprecation:
        type: string
      name:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string

  halCuriesLink:
    title: HAL Curies Link
    allOf:
      - type: object
        properties:
          templated:
            enum:
              - true
        required:
          - templated
      - $ref: '#/definitions/halLinkObject'

  halResource:
    title: HAL Resource Object
    type: object
    properties:
      _links:
        type: object
        additionalProperties:
          # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
          allOf:
            - $ref: '#/definitions/halLinkObject'
            - type: array
              items:
                - $ref: '#/definitions/halLinkObject'
        properties:
          curies:
            # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
            allOf:
              - $ref: '#/definitions/halCuriesLink'
              - type: array
                items:
                  - $ref: '#/definitions/halCuriesLink'
      _embedded:
        type: object
        additionalProperties: true
        # WARN: Apiary doesn't support circular references
        # additionalProperties:
        #   anyOf:
        #     - $ref: '#/definitions/hal_resource'
        #     - type: array
        #       items:
        #         - $ref: '#/definitions/hal_resource'